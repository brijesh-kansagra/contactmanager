{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","event","preventDefault","newContact","post","history","push","target","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.866a3061.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter( contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact)\n            };\n        default:\n            return state;\n    }\n};\n\nexport class Provider extends Component {\n/* \n{\n                id: 1,\n                name: 'Brijesh Kansagra',\n                email: 'a@b.com',\n                phone: '1234'\n            },\n            {\n                id: 2,\n                name: 'Khyati Kansagra',\n                email: 'aa@b.com',\n                phone: '12345'\n            },\n            {\n                id: 3,\n                name: 'Aarna Kansagra',\n                email: 'abc@b.com',\n                phone: '123456'\n            }\n*/\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Consumer} from '../../context';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n        dispatch({type: 'DELETE_CONTACT', payload: id});\n    };\n    \n    render() {\n\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n        return (\n            <Consumer>\n                {value => {\n\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                        <h4>{name}\n                        <i onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} \n                            className=\"fas fa-sort-down\" style={{ cursor: 'pointer'}}/>\n                        <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red'}} \n                            onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n                        <Link to={`/contact/edit/${id}`}>\n                            <i className=\"fas fa-pencil-alt\"\n                                style={{\n                                    cursor: 'pointer',\n                                    float: 'right',\n                                    color: 'black',\n                                    marginRight: '1rem'\n                                }}></i>\n                        </Link>\n                        </h4>\n                        { showContactInfo ? (\n                            <ul className=\"list-group\">\n                                <li className=\"list-group-item\">Email: {email}</li>\n                                <li className=\"list-group-item\">Phone: {phone}</li>\n                            </ul>\n                            ) : null }\n                    </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n};\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport {Consumer} from '../../context';\n\nclass Contacts extends Component {\n    /*deleteContact = id => {\n        const { contacts } = this.state;\n        const newContacts = contacts.filter(contact => contact.id !== id);\n        this.setState({ contacts: newContacts});\n    };\n    deleteClickHandler={this.deleteContact.bind(this,contact.id)}*/\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact List</span></h1>\n                            {contacts.map(contact => \n                            <Contact key={contact.id} contact={contact}/>)}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input type={type} \n                className={classnames('form-control form-control-lg', {'is-invalid': error})}\n                name={name} placeholder={placeholder} value={value}\n                onChange={onChange}/>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    )\n}\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    label: PropTypes.string.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup'\n//import { v4 as uuidv4} from 'uuid';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    onSubmit = async (dispatch, event) => {\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n        const newContact = {\n        //    id: uuidv4(),\n            name,\n            email,\n            phone\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users/', newContact);\n        dispatch({ type: 'ADD_CONTACT', payload: res.data});\n\n/*         dispatch({ type: 'ADD_CONTACT', payload: newContact});\n        this.setState( {\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        }); */\n\n        this.props.history.push('/');\n    }\n    onChange = event => this.setState({[event.target.name]: event.target.value})\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                { value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                        <div className=\"card-header\">Add Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" \n                                    value={name} onChange={this.onChange} error={errors.name}/>\n                                <TextInputGroup type=\"email\" label=\"Email\" name=\"email\" \n                                    placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email}/>\n                                <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" \n                                    value={phone} onChange={this.onChange} error={errors.phone}/>\n                                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                            </form>\n                        </div>\n                    </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\nexport default AddContact;","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        });\n    }\n\n    onSubmit = async (dispatch, event) => {\n        event.preventDefault();\n        const { name, email, phone } = this.state;\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n        const updateContact = {\n            name,\n            email,\n            phone\n        };\n\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data});\n\n/*         dispatch({ type: 'ADD_CONTACT', payload: newContact});\n        this.setState( {\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        }); */\n\n        this.props.history.push('/');\n    }\n    onChange = event => this.setState({[event.target.name]: event.target.value})\n\n    render() {\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                { value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                        <div className=\"card-header\">Edit Contact</div>\n                        <div className=\"card-body\">\n                            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                <TextInputGroup label=\"Name\" name=\"name\" placeholder=\"Enter Name\" \n                                    value={name} onChange={this.onChange} error={errors.name}/>\n                                <TextInputGroup type=\"email\" label=\"Email\" name=\"email\" \n                                    placeholder=\"Enter Email\" value={email} onChange={this.onChange} error={errors.email}/>\n                                <TextInputGroup label=\"Phone\" name=\"phone\" placeholder=\"Enter Phone\" \n                                    value={phone} onChange={this.onChange} error={errors.phone}/>\n                                <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                            </form>\n                        </div>\n                    </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n    const { branding } = props;\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark \n        bg-danger mb-3 py-0\">\n            <div className=\"container\">\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                <div>\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link to=\"/\" className=\"nav-link\">\n                                <i className=\"fas fa-home\"></i>Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/contact/add\" className=\"nav-link\">\n                            <i className=\"fas fa-plus\"></i>Add</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-question\"></i>About</Link>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            <h1 className=\"display-4\">About Contact Manager</h1>\n            <p className=\"lead\">Simple App to manage contacts</p>\n            <p className=\"text-secondary\">Version 1.0.0</p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1 className=\"display-4\"><span className=\"text-danger\">404 Page Not Found</span></h1>\n            <p className=\"lead\">That page does not exist</p>\n        </div>\n    )\n}\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport {Provider} from './context'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Contacts}/>\n            <Route exact path=\"/contact/add\" component={AddContact}/>\n            <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n            <Route exact path=\"/about\" component={About}/>\n            <Route component={NotFound}/>\n          </Switch>\n        </div>\n      </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}